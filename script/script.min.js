function handleNavbarScroll() { const header = document.querySelector(".navbar"); window.onscroll = function () { const top = window.scrollY; if (top >= 100) { header.classList.add("navbarDark") } else { header.classList.remove("navbarDark") } } }
function handleNavbarCollapse() { const navLinks = document.querySelectorAll(".nav-item"); const menuToggle = document.getElementById("navbarSupportedContent"); navLinks.forEach((link) => { link.addEventListener("click", () => { new bootstrap.Collapse(menuToggle).toggle() }) }) }
function createPortfolioFromJSON() {
    const track = document.getElementById("carouselTrack"); let currentIndex = 0; let visibleCards = 3; let data = []; function getVisibleCards() { const width = window.innerWidth; if (width < 768) { return 1 } else if (width < 1024) { return 2 } else { return 3 } }
    function renderCards(startIndex) {
        visibleCards = getVisibleCards(); track.innerHTML = ""; const total = data.length; for (let i = 0; i < visibleCards; i++) {
            const index = (startIndex + i) % total; const item = data[index]; const objectifsArray = item.objectifs || item.text || []; let buttons = ""; if (item.code && item.code !== "#") { buttons += `<a href="${item.code}" class="btn-custom" target="_blank">Code</a>` }
            if (item.link && item.link !== "#") { buttons += `<a href="${item.link}" class="btn-custom" target="_blank">Site web</a>` }
            const card = document.createElement("div"); card.classList.add("card", "portfolioContent"); card.innerHTML = `
            <img class="card-img-top" src="images/${item.image}" alt="${item.alt}">
            <div class="card-body">
                <h3 class="card-title" onclick='openModal("${item.title}", ${JSON.stringify(objectifsArray)})'>
                    ${item.title}
                </h3>
                <div class="btn-group-custom">
                    ${buttons}
                </div>
            </div>
        `; track.appendChild(card)
        }
    }
    fetch("data/portfolio.json").then((response) => response.json()).then((jsonData) => { data = jsonData; renderCards(currentIndex); window.addEventListener("resize", () => { renderCards(currentIndex) }); document.getElementById("nextBtn").addEventListener("click", () => { currentIndex = (currentIndex + 1) % data.length; renderCards(currentIndex) }); document.getElementById("prevBtn").addEventListener("click", () => { currentIndex = (currentIndex - 1 + data.length) % data.length; renderCards(currentIndex) }) })
}
function openModal(title, objectifs) { document.getElementById("modalTitle").innerText = title; const content = document.getElementById("modalContent"); content.innerHTML = objectifs.map(obj => `<li>ðŸ“Œ ${obj}</li>`).join(""); document.getElementById("customModal").style.display = "flex" }
function closeModal() { document.getElementById("customModal").style.display = "none" }
window.addEventListener("click", function (e) { const modal = document.getElementById("customModal"); if (e.target === modal) { closeModal() } }); window.addEventListener("keydown", function (e) { if (e.key === "Escape") { closeModal() } }); function renderSkillsGrid() { const container = document.getElementById("skillsGrid"); fetch("data/skills.json").then((response) => response.json()).then((data) => { data.forEach((section) => { const col = document.createElement("div"); col.className = "col-md-6 col-lg-3 mb-4"; const card = document.createElement("div"); card.className = "p-3 shadow-sm rounded bg-light h-100"; const title = document.createElement("h3"); title.className = "mb-3 fw-bold"; title.innerText = section.category; const ul = document.createElement("ul"); ul.className = "list-unstyled"; section.skills.forEach((skill) => { const li = document.createElement("li"); li.className = "mb-2 d-flex align-items-center gap-2"; li.innerHTML = `<i class="${skill.icon}" style="color: #B96F4E;"></i> <span style="color: #5A6F57;">${skill.name}</span>`; ul.appendChild(li) }); card.appendChild(title); card.appendChild(ul); col.appendChild(card); container.appendChild(col) }) }) }
handleNavbarScroll(); handleNavbarCollapse(); createPortfolioFromJSON(); renderSkillsGrid()